trigger:
  - master  # Adjust this to your main branch name

pool:
  vmImage: 'ubuntu-latest'  # You can also use 'windows-latest' based on preference

steps:
  # Step to install Java 17 and set it as default
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        # Update package index
        sudo apt-get update

        # Install OpenJDK 17
        sudo apt-get install -y openjdk-17-jdk

        # Update alternatives to set Java 17 as the default
        sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-17-openjdk-amd64/bin/java 1
        sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac 1
        sudo update-alternatives --config java
        sudo update-alternatives --config javac

        # Verify Java version
        java -version

  # Maven build step
  - task: Maven@4
    inputs:
      mavenPomFile: 'pom.xml'  # Adjust the path if your pom.xml is in a subfolder
      mavenOptions: '-Xmx1024m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '17'  # Specify Java 17 for the Maven build
      jdkArchitectureOption: 'x64'
      goals: 'clean package'

  # Copy JAR files to the staging directory
  - task: CopyFiles@2
    inputs:
      contents: '**/target/*.jar'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
  
  # Publish build artifacts
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'
  
  # Run the Spring Boot application
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        # Verify Java 17 is being used
        java -version
        
        echo "Listing files in target directory:"
        ls -al $(Build.ArtifactStagingDirectory)/target
        
        echo "Running the Spring Boot application..."
        java -jar $(Build.ArtifactStagingDirectory)/target/ASD-0.0.1-SNAPSHOT.jar
