trigger:
  branches:
    include:
      - prod

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: ProductionVariables

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        steps:
          - checkout: self
          - task: JavaToolInstaller@0
            displayName: 'Install Java 17'
            inputs:
              versionSpec: '17'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
          - script: |
              java -version
            displayName: 'Check Java 17 version'
          - task: Maven@4
            displayName: 'Maven Clean and Package as ZIP (Skip Tests)'
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx1024m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '17'
              jdkArchitectureOption: 'x64'
              goals: 'clean package'
              options: '-DskipTests -DoutputDirectory=target -Darchive.format=zip'
          - task: CopyFiles@2
            displayName: 'Copy ZIP files to staging'
            inputs:
              contents: '**/target/*.zip'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Build Artifacts'
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'

  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployJob
        pool:
          vmImage: 'ubuntu-20.04'
        steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy'
            inputs:
              azureSubscription: 'AzureAppServiceConnection'
              appName: 'onlineSupermarketOrderingApp'
              package: '$(Pipeline.Workspace)/drop/*.zip'
